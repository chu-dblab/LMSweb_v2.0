@model EvaluationManagementViewModel

@{
    var k = 1;
    ViewData["Title"] = "評價系統";

    string homeUrl = Url.Action("Details", "Mission");
}

<div class="container">

    <div class="card m-3 p-4">
        <div class="row mb-3">
            <div class="col">
                <h3>評價列表</h3>
            </div>
        </div>
        <table class="table table-striped">
            <thead>
                <tr class="row mx-1">
                    <th class="col-1">編號</th>
                    <th class="col-3">
                        該組是否繳交作業
                    </th>
                    <th class="col">
                        是否完成評價
                    </th>
                    <th class="col-2"></th>
                </tr>
            </thead>
            <tbody id="number">
                @foreach (var item in Model.EvaGroupList)
                {
                    <tr class="row bg-white mx-1">
                        <td class="col-1 align-self-center py-3">
                            <span class='ms-2'>@(k++)</span>
                        </td>
                        <td class="col-3 align-self-center py-3">
                            @if (item.IsSubmitted)
                            {
                                <span class="text-success">已繳交作業</span>
                            }
                            else
                            {
                                <span class="text-danger">未繳交</span>
                            }
                        </td>
                        <td class="col align-self-center py-3">
                            @if (item.IsAnswered)
                            {
                                <span class="text-success">已完成</span>
                            }
                            else
                            {
                                <span class="text-danger">未完成</span>
                            }
                        </td>
                        <td class="d-grid d-flex justify-content-end col-2">
                            @if (item.IsSubmitted && !item.IsAnswered)
                            {
                                <a href="@Url.Action("Index", "Questionnaire" , item.QuestionnaireIndexViewModel)" class="btn btn-primary my-auto">
                                    進入評價
                                </a>
                            }
                            else if (item.IsSubmitted && item.IsAnswered)
                            {
                                <a href="@Url.Action("Show", "Evaluation" , new {mid = Model.MissionId, buid = item.GroupLeaderId})" class="btn btn-primary opacity-50 my-auto">
                                    查看評價
                                </a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <a class="btn btn-secondary" href="@Url.Action("Details", "Mission", new {cid = Model.CourseId ,mid = Model.MissionId })">返回任務</a>
    </div>
</div>

@section scripts
{
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        var homeUrl = '@homeUrl'
        // 如果 IsPeerEvaluation 為 false，則跳出訊息是否進行評價

        var isPeerEvaluation = @Model.IsPeerEvaluation.ToString().ToLower();

        function goPeerEvaluation(mid) {
            const apiUrl = '@Url.Action("Index", "Evaluation")/GoPeerEvaluation';
            const urlencoded = new URLSearchParams();
            urlencoded.append("mid", mid);
            fetch(apiUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                body: urlencoded
            })
                .then(response => {
                    if (response.ok) {
                        return response.json(); // 假設後端有返回JSON
                    } else {
                        throw new Error('Network response was not ok');
                    }
                })
                .then(data => {
                    console.log('Peer evaluation initiated successfully:', data);
                })
                .catch(error => {
                    console.error('There was a problem with the fetch operation:', error);
                });
        }

        // 一進入到畫面就先判斷是否要進入評價
        if (!isPeerEvaluation) {
            Swal.fire({
                title: "是否進行評價",
                text: "即將進行評價，進入評價階段後將無法更改流程圖與程式碼。",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "確定進入評價",
                cancelButtonText: "再想想",
                allowOutsideClick: false
            }).then((result) => {
                if (result.isConfirmed) {
                    goPeerEvaluation('@Model.MissionId')
                    Swal.fire({
                        title: "成功進入評價",
                        icon: "success"
                    });
                } else if (result.dismiss === Swal.DismissReason.cancel) {
                    window.location.href = homeUrl + "?mid=@Model.MissionId&cid=@Model.CourseId"; // 將 "主畫面網址" 替換為實際的主畫面 URL
                }
            });
        }

    </script>
}